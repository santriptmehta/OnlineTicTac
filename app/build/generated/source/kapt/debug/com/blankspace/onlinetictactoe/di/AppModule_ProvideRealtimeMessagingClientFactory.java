// Generated by Dagger (https://dagger.dev).
package com.blankspace.onlinetictactoe.di;

import com.blankspace.onlinetictactoe.data.RealtimeMessagingClient;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import io.ktor.client.HttpClient;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideRealtimeMessagingClientFactory implements Factory<RealtimeMessagingClient> {
  private final Provider<HttpClient> httpClientProvider;

  public AppModule_ProvideRealtimeMessagingClientFactory(Provider<HttpClient> httpClientProvider) {
    this.httpClientProvider = httpClientProvider;
  }

  @Override
  public RealtimeMessagingClient get() {
    return provideRealtimeMessagingClient(httpClientProvider.get());
  }

  public static AppModule_ProvideRealtimeMessagingClientFactory create(
      Provider<HttpClient> httpClientProvider) {
    return new AppModule_ProvideRealtimeMessagingClientFactory(httpClientProvider);
  }

  public static RealtimeMessagingClient provideRealtimeMessagingClient(HttpClient httpClient) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideRealtimeMessagingClient(httpClient));
  }
}
